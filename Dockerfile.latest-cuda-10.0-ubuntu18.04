FROM nvidia/cuda:10.0-devel-ubuntu18.04

# TensorFlow version is tightly coupled to CUDA and cuDNN so it should be selected carefully
ENV TENSORFLOW_VERSION=1.14.0
ENV CUDNN_VERSION=7.6.0.64-1+cuda10.0
ENV NCCL_VERSION=2.4.7-1+cuda10.0

ARG python=3.7
ENV PYTHON_VERSION=${python}

# Set default shell to /bin/bash
SHELL ["/bin/bash", "-cu"]

RUN apt-get update && apt-get install -y --allow-downgrades --allow-change-held-packages --no-install-recommends \
        build-essential \
        cmake \
        g++-5 \
        git \
        curl \
        vim \
        wget \
        ca-certificates \
        libcudnn7=${CUDNN_VERSION} \
        libnccl2=${NCCL_VERSION} \
        libnccl-dev=${NCCL_VERSION} \
        libjpeg-dev \
        libpng-dev \
        pkg-config \
        python${PYTHON_VERSION} \
        python${PYTHON_VERSION}-dev \
        librdmacm1 \
        libibverbs1 \
        ibverbs-providers \ 
        zip zlib1g-dev unzip \
        mpich

RUN if [[ "${PYTHON_VERSION}" == "3.6" ]]; then \
        apt-get install -y python${PYTHON_VERSION}-distutils; \
    fi
RUN ln -s /usr/bin/python${PYTHON_VERSION} /usr/bin/python

RUN curl -O https://bootstrap.pypa.io/get-pip.py && \
    python get-pip.py && \
    rm get-pip.py

RUN pip install numpy \
        tensorflow-gpu==${TENSORFLOW_VERSION} 

RUN wget https://github.com/bazelbuild/bazel/releases/download/0.24.1/bazel-0.24.1-installer-linux-x86_64.sh && \ 
    git clone https://github.com/tensorflow/tensorflow.git -b v${TENSORFLOW_VERSION} && \
    git clone -b stable https://github.com/lammps/lammps.git /lammps-stable && \
    git clone https://github.com/deepmodeling/deepmd-kit.git /deepmd-kit 

RUN chmod +x bazel-0.24.1-installer-linux-x86_64.sh && \
    ./bazel-0.24.1-installer-linux-x86_64.sh --prefix=/usr && \
    bazel version

WORKDIR /tensorflow
# temporarily using CUDA stubs
RUN ldconfig /usr/local/cuda/targets/x86_64-linux/lib/stubs && \
    ln -s /usr/local/cuda/targets/x86_64-linux/lib/stubs/libcuda.so /usr/local/cuda/targets/x86_64-linux/lib/stubs/libcuda.so.1 && \
    /bin/echo -e "\n\ny\nn\nn\nn\nn\nn\nn\nn\nn\ny\n10.0\n\n7.6\n\nn\n2.4.7\n\n3.5,5.2,6.0,6.1,7.0\nn\n\nn\n\n">install_input && \
    ./configure < install_input && \
    bazel build -c opt --config=cuda \
    --copt=-msse4.2 --copt=-mavx --copt=-mavx2 --copt=-mfma \
    //tensorflow:libtensorflow_cc.so --action_env="LD_LIBRARY_PATH=${LD_LIBRARY_PATH}" && \
    ldconfig

RUN mkdir /tensorflow_root && \
    mkdir /deepmd_root && \
    export deepmd_root="/deepmd_root" && \
    export tensorflow_root="/tensorflow_root" && \
    mkdir $tensorflow_root/lib && \
    cp -d bazel-bin/tensorflow/libtensorflow_cc.so* $tensorflow_root/lib/ && \
    cp -d bazel-bin/tensorflow/libtensorflow_framework.so* $tensorflow_root/lib/ && \
    cp -d $tensorflow_root/lib/libtensorflow_framework.so.1 $tensorflow_root/lib/libtensorflow_framework.so && \
    mkdir -p $tensorflow_root/include/tensorflow && \
    cp -r bazel-genfiles/* $tensorflow_root/include/ && \
    cp -r tensorflow/cc $tensorflow_root/include/tensorflow && \
    cp -r tensorflow/core $tensorflow_root/include/tensorflow && \
    cp -r third_party $tensorflow_root/include && \
    cp -r bazel-tensorflow/external/eigen_archive/Eigen/ $tensorflow_root/include && \
    cp -r bazel-tensorflow/external/eigen_archive/unsupported/ $tensorflow_root/include && \
    rsync -avzh --include '*/' --include '*.h' --include '*.inc' --exclude '*' \
    bazel-tensorflow/external/protobuf_archive/src/ $tensorflow_root/include/ && \
    rsync -avzh --include '*/' --include '*.h' --include '*.inc' --exclude '*' \
    bazel-tensorflow/external/com_google_absl/absl/ $tensorflow_root/include/absl && \ 
    cd $tensorflow_root/include && \
    find . -name "*.cc" -type f -delete

WORKDIR  /deepmd-kit

RUN pip install . && \
    mkdir source/build && \
    cd source/build && \
    ldconfig /usr/local/cuda/targets/x86_64-linux/lib/stubs && \
    export deepmd_root="/deepmd_root" && \
    export tensorflow_root="/tensorflow_root" && \
    cmake -DTF_GOOGLE_BIN=0 -DTENSORFLOW_ROOT=$tensorflow_root -DCMAKE_INSTALL_PREFIX=$deepmd_root .. && \
    make && \
    make install && \
    make lammps && \
    ldconfig

RUN ln -s /deepmd_root/bin/dp_ipi /usr/bin/dp_ipi && \
    mv /lammps-stable/src/lmp_mpi /usr/bin

RUN bazel clean \
  && rm -rf /root/.cache \
  && rm -rf /lammps-stable \
  && rm -rf /bazel-*-installer-linux-x86_64.sh \
  && rm -rf /tensorflow \
  && rm -rf /usr/bin/bazel \
  && rm -rf /usr/lib/bazel \
  && rm -rf /tmp

COPY Dockerfile ./